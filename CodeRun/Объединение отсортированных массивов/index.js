/**
 * @param {number[]} nums1 - первый отсортированный массив
 * @param {number} m - количество значимых элементов в nums1
 * @param {number[]} nums2 - второй отсортированный массив
 * @param {number} n - количество элементов в nums2
 * @return {void} Не возвращайте ничего, вместо этого модифицируйте nums1.
 */

function merge_sort(nums1, m, nums2, n) {

  // Будем идти по второму массиву с конца в начало
  for (let i = nums2.length - 1; i >= 0; i--) {

    // Если количество значимых элементов первого массива равно нулю, то массив выглядит примерно так: [0,0,1,2,3]
    if (m === 0) {
      for (let j = n - 1; j >= 0; j--) {
        // Просто заменить все нули на значения второго массива
        nums1[j] = nums2[j]
      }
    }

    /**
     * Если элемент второго массива больше, чем последний элемент перед нулем первого
     * nums1: [1,2,3,0,0,90], nums2: [8,9,0]
     * if ( 9 > 3) -> nums1: [1,2,3,0,9,90], nums2: [8,0,0], n = 2 - 1 = 1
     */
    if (nums2[i] > nums1[m - 1]) {
      // последний ноль
      nums1[m - 1 + n] = nums2[i]
      n--
      nums2[i] = 0
      continue;
    }

    /**
     * Если элемент второго массива меньше или равен, чем последний элемент перед нулем первого
     * nums1: [7,8,9,0,0], nums2: [1,2]
     * if ( 2 < 9 ) -> nums1: [7,8,0,0,9], nums2: [1,2], m = 3 - 1 = 2
     */
    if (nums2[i] <= nums1[m - 1]) {
      // нужно поменять местами "элемент в nums1" и "последний ноль"
      nums1[m - 1 + n] = nums1[m - 1]
      nums1[m - 1] = 0
      m--
      i++
      nums2[i] = 0
      continue;
    }

  }

}